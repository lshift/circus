require 'net/ssh'
require 'net/scp'
require 'uri'
require 'highline/import'

require 'tasks/installer.tasks'
if ENV['USE_SOURCE']
  require 'tasks/source_install.tasks'
end

task :install => [
  'install:access', 'install:clown', 'install:acts'
]
namespace :install do
  task :ensure_target do
    @target = ENV['TARGET']
    unless @target
      puts "Please specify a TARGET host, such as ssh://myserver.com"
      fail
    end
    @uri = URI.parse(@target)
    
    @current_user = ENV['USER']
    @deploy_target = "ssh://#{@current_user}@#{@uri.host}"
  end
    
  task :ensure_root_ssh => [:ensure_target] do
    root_pw = ask("Enter root password for #{@uri.host}: ") { |q| q.echo = false }

    opts = {:port => @uri.port || 22, :password => root_pw}
    @ssh = Net::SSH.start(@uri.host, 'root', opts)
  end
  
  task :access => [:ensure_root_ssh] do
    @ssh.exec!('groupadd admin')
    
    user_exists = (@ssh.exec!("id #{@current_user} >/dev/null 2>/dev/null; echo $?").strip == '0')
    unless user_exists
      log_remote_cmd(@ssh, "useradd -G admin #{@current_user}")
    end
    
    current_key = File.read("#{ENV['HOME']}/.ssh/id_rsa.pub").strip
    log_remote_cmd(@ssh, "mkdir -p ~#{@current_user}/.ssh")
    log_remote_cmd(@ssh, "echo '#{current_key}' >~#{@current_user}/.ssh/authorized_keys")
  end
  
  desc "Ensures that a working Chef installation is available on the host"
  task :chef => [:ensure_root_ssh] do
    chef_location = @ssh.exec('which chef-solo').strip
    if chef_location.empty?
      gem_version = @ssh.exec!('gem --version').strip
      unless ['1.3.6', '1.3.7'].include? gem_version
        log_remote_cmd(@ssh, 'cd /tmp/circus-install; wget http://production.cf.rubygems.org/rubygems/rubygems-1.3.7.tgz')
        log_remote_cmd(@ssh, 'cd /tmp/circus-install; tar -xzf rubygems-1.3.7.tgz && cd rubygems-1.3.7 && ruby setup.rb')
      end
      
      log_remote_cmd(@ssh, 'gem install chef')
    end
  end
  
  task :clown => [:chef]
end
